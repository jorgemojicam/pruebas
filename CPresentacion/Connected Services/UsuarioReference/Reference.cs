//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CPresentacion.UsuarioReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Usuario", Namespace="http://schemas.datacontract.org/2004/07/CData")]
    [System.SerializableAttribute()]
    public partial class Usuario : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FechaNacimientoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> SexoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FechaNacimiento {
            get {
                return this.FechaNacimientoField;
            }
            set {
                if ((this.FechaNacimientoField.Equals(value) != true)) {
                    this.FechaNacimientoField = value;
                    this.RaisePropertyChanged("FechaNacimiento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Sexo {
            get {
                return this.SexoField;
            }
            set {
                if ((this.SexoField.Equals(value) != true)) {
                    this.SexoField = value;
                    this.RaisePropertyChanged("Sexo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UsuarioReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/findAll", ReplyAction="http://tempuri.org/IService/findAllResponse")]
        CPresentacion.UsuarioReference.Usuario[] findAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/findAll", ReplyAction="http://tempuri.org/IService/findAllResponse")]
        System.Threading.Tasks.Task<CPresentacion.UsuarioReference.Usuario[]> findAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/find", ReplyAction="http://tempuri.org/IService/findResponse")]
        CPresentacion.UsuarioReference.Usuario find(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/find", ReplyAction="http://tempuri.org/IService/findResponse")]
        System.Threading.Tasks.Task<CPresentacion.UsuarioReference.Usuario> findAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/create", ReplyAction="http://tempuri.org/IService/createResponse")]
        void create(CPresentacion.UsuarioReference.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/create", ReplyAction="http://tempuri.org/IService/createResponse")]
        System.Threading.Tasks.Task createAsync(CPresentacion.UsuarioReference.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/update", ReplyAction="http://tempuri.org/IService/updateResponse")]
        void update(int id, CPresentacion.UsuarioReference.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/update", ReplyAction="http://tempuri.org/IService/updateResponse")]
        System.Threading.Tasks.Task updateAsync(int id, CPresentacion.UsuarioReference.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/delete", ReplyAction="http://tempuri.org/IService/deleteResponse")]
        void delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/delete", ReplyAction="http://tempuri.org/IService/deleteResponse")]
        System.Threading.Tasks.Task deleteAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : CPresentacion.UsuarioReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<CPresentacion.UsuarioReference.IService>, CPresentacion.UsuarioReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CPresentacion.UsuarioReference.Usuario[] findAll() {
            return base.Channel.findAll();
        }
        
        public System.Threading.Tasks.Task<CPresentacion.UsuarioReference.Usuario[]> findAllAsync() {
            return base.Channel.findAllAsync();
        }
        
        public CPresentacion.UsuarioReference.Usuario find(int id) {
            return base.Channel.find(id);
        }
        
        public System.Threading.Tasks.Task<CPresentacion.UsuarioReference.Usuario> findAsync(int id) {
            return base.Channel.findAsync(id);
        }
        
        public void create(CPresentacion.UsuarioReference.Usuario usuario) {
            base.Channel.create(usuario);
        }
        
        public System.Threading.Tasks.Task createAsync(CPresentacion.UsuarioReference.Usuario usuario) {
            return base.Channel.createAsync(usuario);
        }
        
        public void update(int id, CPresentacion.UsuarioReference.Usuario usuario) {
            base.Channel.update(id, usuario);
        }
        
        public System.Threading.Tasks.Task updateAsync(int id, CPresentacion.UsuarioReference.Usuario usuario) {
            return base.Channel.updateAsync(id, usuario);
        }
        
        public void delete(int id) {
            base.Channel.delete(id);
        }
        
        public System.Threading.Tasks.Task deleteAsync(int id) {
            return base.Channel.deleteAsync(id);
        }
    }
}
